context:
  name: py-rattler
  python_name: py_rattler
  version: "0.10.0"
  python_min: ${{ python_min }}.*

recipe:
  name: py-rattler
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/${{ python_name }}-${{ version }}.tar.gz
  sha256: ddb6d9ffa67d44fdd65cf8efc9dec28c5f51ad1e2b62930c05b0f39bd12d8053

build:
  number: 2

outputs:
  - package:
      name: py-rattler
    build:
      # only build for the minimal python version
      skip: not (match(python, python_min) and is_abi3 == 'true')
      script: build_base
      python:
        version_independent: true
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }}
            - maturin >=1.2.2,<2
        - ${{ compiler('c') }}
        - ${{ stdlib("c") }}
        - ${{ compiler('rust') }}
        - cargo-bundle-licenses
      host:
        - python
        - python-abi3
        - maturin >=1.2.2,<2
        - pip
        - if: unix
          then:
            - openssl
      run:
        - python >=3.9
    tests:
      - python:
          imports:
            - rattler
          python_version: ["${{ python_min }}", "3.12"]

  - package:
      name: py_rattler
    build:
      noarch: generic
      skip: not (linux and x86_64 and match(python, python_min))
    requirements:
      run:
        - ${{ pin_subpackage('py-rattler', upper_bound="x.x.x") }}
    tests:
      - python:
          imports:
            - rattler

about:
  homepage: https://github.com/conda/rattler
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - py-rattler/THIRDPARTY.yml
  summary: A blazing fast library to work with the conda ecosystem
  description: |
    Rattler is a library that provides common functionality used within the conda
    ecosystem. The goal of the library is to enable programs and other libraries to
    easily interact with the conda ecosystem without being dependent on Python. Its
    primary use case is as a library that you can use to provide conda related
    workflows in your own tools.
  repository: https://github.com/conda/rattler

extra:
  feedstock-name: py-rattler
  recipe-maintainers:
    - baszalmstra
    - pavelzw
