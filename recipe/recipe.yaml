context:
  name: py-rattler
  python_name: py_rattler
  version: "0.11.0"

recipe:
  name: py-rattler
  version: ${{ version }}

source:
  url: https://pypi.org/packages/source/${{ name[0] }}/${{ name }}/${{ python_name }}-${{ version }}.tar.gz
  sha256: b00f91e19863741ce137a504eff3082c0b0effd84777444919bd83357530867f

build:
  number: 0

outputs:
  - package:
      name: py-rattler
    build:
      # only build for the minimal python version
      skip: is_abi3 and not is_python_min
      script: build_base
      python:
        version_independent: is_abi3
    requirements:
      build:
        - if: build_platform != target_platform
          then:
            - python
            - cross-python_${{ target_platform }}
            - maturin >=1.2.2,<2
        - ${{ compiler('c') }}
        - ${{ stdlib("c") }}
        - ${{ compiler('rust') }}
        - cargo-bundle-licenses
      host:
        - python
        - if: is_abi3
          then python-abi3
        - maturin >=1.2.2,<2
        - pip
        - if: unix
          then:
            - openssl
      run:
        - python >=${{ python_min }}
      ignore_run_exports:
        from_package:
          - cross-python_${{ target_platform }}
    tests:
      - python:
          imports:
            - rattler
          python_version: ["${{ python_min ~ '.*' }}", "3.12.*"]
      - script:
          - if: unix and is_abi3
            then: abi3audit $SP_DIR/spam.abi3.so -s -v --assume-minimum-abi3 ${{ python_min }}
          - if: win and is_abi3
            then: abi3audit %SP_DIR%/spam.pyd -s -v --assume-minimum-abi3 {{ python_min }}
          requirements:
            run:
              - if: is_abi3
                then: abi3audit

  - package:
      name: py_rattler
    build:
      noarch: generic
      skip: not (linux and x86_64 and is_python_min)
    requirements:
      run:
        - ${{ pin_subpackage('py-rattler', upper_bound="x.x.x") }}
    tests:
      - python:
          imports:
            - rattler

about:
  homepage: https://github.com/conda/rattler
  license: BSD-3-Clause
  license_file:
    - LICENSE
    - py-rattler/THIRDPARTY.yml
  summary: A blazing fast library to work with the conda ecosystem
  description: |
    Rattler is a library that provides common functionality used within the conda
    ecosystem. The goal of the library is to enable programs and other libraries to
    easily interact with the conda ecosystem without being dependent on Python. Its
    primary use case is as a library that you can use to provide conda related
    workflows in your own tools.
  repository: https://github.com/conda/rattler

extra:
  feedstock-name: py-rattler
  recipe-maintainers:
    - baszalmstra
    - pavelzw
